controller:
  name: controller
  image:
    registry: docker.io
    image: inendless/sail-kubernetes-controller
    tag: "1.0.0"
    pullPolicy: IfNotPresent
  containerName: controller  
  containerPort:
    http: 80
    https: 443  
    
  scope:
    enabled: false
    namespace: ""
    namespaceSelector: ""

  hostPort:
    enabled: false
    ports:
      http: 80
      https: 443

  ingressClassResource:
    name: sail
    ingressClass: sail
    enabled: true
    controllerValue: inendless.io/ingress-controller
    parameters: {}

  livenessProbe: {}

  readinessProbe: {}

  resources:
    requests:
      cpu: 100m
      memory: 90Mi    

  podSecurityContext: {}
  podAnnotations: {}
  containerSecurityContext: {}

  tolerations: []
  nodeSelector: {}
  affinity: {}
  sysctls: {}
  autoscaling:
    enabled: false   
  
  replicaCount: 1

  service:
   enabled: true
   ports:
      http: 80
      https: 443
   targetPorts:
      http: http
      https: https
   type: ClusterIP

proxy:
  enabled: true
  kind: Deployment
  name: proxy
  containerName: proxy
  image:
    registry: docker.io
    image: inendless/sail-proxy
    tag: "1.0.0"
    pullPolicy: IfNotPresent  

  containerPort:
    http: 80
    https: 443      
  
  hostPort:
    enabled: false
    ports:
      http: 80
      https: 443

  autoscaling:
    enabled: false    

  replicaCount: 1

  service:
   enabled: true
   ports:
      http: 82
      https: 445
   targetPorts:
      http: http
      https: https
   type: LoadBalancer

  livenessProbe: {}

  readinessProbe: {}

  podAnnotations: {}

imagePullSecrets: []

serviceAccount:
  create: true
  name: ""
  automountServiceAccountToken: true
  annotations: {}